{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp, getApps, getApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  \"apiKey\": \"AIzaSyCLLyh8LK6LpxclQWobqVu320EE5LnV2-Q\",\n  \"authDomain\": \"markdown-showcase-b3c2a.firebaseapp.com\",\n  \"projectId\": \"markdown-showcase-b3c2a\",\n  \"storageBucket\": \"markdown-showcase-b3c2a.appspot.com\",\n  \"messagingSenderId\": \"813556136781\",\n  \"appId\": \"1:813556136781:web:b4cd5cfdcae1bf58ce9504\",\n  \"measurementId\": \"G-JVSQVF5L28\"\n};\n\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst db = getFirestore(app);\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,UAAU;IACV,cAAc;IACd,aAAa;IACb,iBAAiB;IACjB,qBAAqB;IACrB,SAAS;IACT,iBAAiB;AACnB;AAEA,MAAM,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AACrE,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { db } from '@/lib/firebase';\nimport { collection, addDoc, doc, setDoc, serverTimestamp, Timestamp, getDoc } from 'firebase/firestore';\nimport { revalidatePath } from 'next/cache';\n\nexport type DocType = 'markdown' | 'html';\n\nexport interface DocumentData {\n  name?: string;\n  content: string;\n  type: DocType;\n  createdAt?: Timestamp;\n  updatedAt?: Timestamp;\n}\n\nconst generateSlug = (name: string) => {\n    return name\n      .toLowerCase()\n      .replace(/[^a-z0-9\\s-]/g, '')\n      .trim()\n      .replace(/\\s+/g, '-')\n      .replace(/-+/g, '-');\n};\n\nconst generateShortId = (length = 5) => {\n    const chars = 'abcdefghijklmnopqrstuvwxyz0123456789';\n    let result = '';\n    for (let i = 0; i < length; i++) {\n        result += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return result;\n}\n\n\nexport async function saveDocument(id: string | null, name: string | null, content: string, type: DocType) {\n  try {\n    if (id) {\n      // Update existing document\n      const docRef = doc(db, 'documents', id);\n      await setDoc(docRef, { name: name || '', content, type, updatedAt: serverTimestamp() }, { merge: true });\n      revalidatePath(`/view/${id}`);\n      return { id };\n    } else {\n      // Create new document\n      let newId = '';\n      if (name) {\n        const slug = generateSlug(name);\n        const docRef = doc(db, 'documents', slug);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          // If slug exists, append a short unique ID\n          newId = `${slug}-${generateShortId(5)}`;\n        } else {\n          newId = slug;\n        }\n      } else {\n        // Fallback to a random short ID if no name is provided\n        newId = generateShortId(5);\n      }\n      \n      const docRef = doc(db, 'documents', newId);\n      await setDoc(docRef, {\n        name: name || '',\n        content,\n        type,\n        createdAt: serverTimestamp(),\n        updatedAt: serverTimestamp(),\n      });\n      return { id: newId };\n    }\n  } catch (error) {\n    console.error(\"Error saving document: \", error);\n    let message = 'Unknown Error';\n    if (error instanceof Error) message = error.message;\n    return { error: `Failed to save document: ${message}` };\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AACA;;;;;;;AAYA,MAAM,eAAe,CAAC;IAClB,OAAO,KACJ,WAAW,GACX,OAAO,CAAC,iBAAiB,IACzB,IAAI,GACJ,OAAO,CAAC,QAAQ,KAChB,OAAO,CAAC,OAAO;AACtB;AAEA,MAAM,kBAAkB,CAAC,SAAS,CAAC;IAC/B,MAAM,QAAQ;IACd,IAAI,SAAS;IACb,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAAK;QAC7B,UAAU,MAAM,MAAM,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM,MAAM;IAClE;IACA,OAAO;AACX;AAGO,eAAe,aAAa,EAAiB,EAAE,IAAmB,EAAE,OAAe,EAAE,IAAa;IACvG,IAAI;QACF,IAAI,IAAI;YACN,2BAA2B;YAC3B,MAAM,SAAS,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,aAAa;YACpC,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,QAAQ;gBAAE,MAAM,QAAQ;gBAAI;gBAAS;gBAAM,WAAW,CAAA,GAAA,iKAAA,CAAA,kBAAe,AAAD;YAAI,GAAG;gBAAE,OAAO;YAAK;YACtG,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,CAAC,MAAM,EAAE,IAAI;YAC5B,OAAO;gBAAE;YAAG;QACd,OAAO;YACL,sBAAsB;YACtB,IAAI,QAAQ;YACZ,IAAI,MAAM;gBACR,MAAM,OAAO,aAAa;gBAC1B,MAAM,SAAS,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,aAAa;gBACpC,MAAM,UAAU,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE;gBAC7B,IAAI,QAAQ,MAAM,IAAI;oBACpB,2CAA2C;oBAC3C,QAAQ,GAAG,KAAK,CAAC,EAAE,gBAAgB,IAAI;gBACzC,OAAO;oBACL,QAAQ;gBACV;YACF,OAAO;gBACL,uDAAuD;gBACvD,QAAQ,gBAAgB;YAC1B;YAEA,MAAM,SAAS,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,aAAa;YACpC,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,QAAQ;gBACnB,MAAM,QAAQ;gBACd;gBACA;gBACA,WAAW,CAAA,GAAA,iKAAA,CAAA,kBAAe,AAAD;gBACzB,WAAW,CAAA,GAAA,iKAAA,CAAA,kBAAe,AAAD;YAC3B;YACA,OAAO;gBAAE,IAAI;YAAM;QACrB;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,IAAI,UAAU;QACd,IAAI,iBAAiB,OAAO,UAAU,MAAM,OAAO;QACnD,OAAO;YAAE,OAAO,CAAC,yBAAyB,EAAE,SAAS;QAAC;IACxD;AACF;;;IA1CsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/editor/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {saveDocument as '784eb6af9cd32784c37d679969af27c9aa2490d40a'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/editor-view.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/editor-view.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/editor-view.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/editor-view.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/editor-view.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/editor-view.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8Q,GAC3S,4CACA","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/editor/page.tsx"],"sourcesContent":["import EditorView from '@/components/editor-view';\n\nexport default function NewDocumentPage() {\n  return <EditorView />;\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBAAO,8OAAC,oIAAA,CAAA,UAAU;;;;;AACpB","debugId":null}}]
}