{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp, getApps, getApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  \"apiKey\": \"AIzaSyCLLyh8LK6LpxclQWobqVu320EE5LnV2-Q\",\n  \"authDomain\": \"markdown-showcase-b3c2a.firebaseapp.com\",\n  \"projectId\": \"markdown-showcase-b3c2a\",\n  \"storageBucket\": \"markdown-showcase-b3c2a.appspot.com\",\n  \"messagingSenderId\": \"813556136781\",\n  \"appId\": \"1:813556136781:web:b4cd5cfdcae1bf58ce9504\",\n  \"measurementId\": \"G-JVSQVF5L28\"\n};\n\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst db = getFirestore(app);\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,UAAU;IACV,cAAc;IACd,aAAa;IACb,iBAAiB;IACjB,qBAAqB;IACrB,SAAS;IACT,iBAAiB;AACnB;AAEA,MAAM,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AACrE,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { db } from '@/lib/firebase';\nimport { collection, addDoc, doc, setDoc, serverTimestamp, Timestamp } from 'firebase/firestore';\nimport { revalidatePath } from 'next/cache';\n\nexport type DocType = 'markdown' | 'html' | 'latex';\n\nexport interface DocumentData {\n  content: string;\n  type: DocType;\n  createdAt?: Timestamp;\n  updatedAt?: Timestamp;\n}\n\nexport async function saveDocument(id: string | null, content: string, type: DocType) {\n  try {\n    if (id) {\n      const docRef = doc(db, 'documents', id);\n      await setDoc(docRef, { content, type, updatedAt: serverTimestamp() }, { merge: true });\n      revalidatePath(`/${id}`);\n      revalidatePath(`/view/${id}`);\n      return { id };\n    } else {\n      const docRef = await addDoc(collection(db, 'documents'), {\n        content,\n        type,\n        createdAt: serverTimestamp(),\n        updatedAt: serverTimestamp(),\n      });\n      return { id: docRef.id };\n    }\n  } catch (error) {\n    console.error(\"Error saving document: \", error);\n    let message = 'Unknown Error';\n    if (error instanceof Error) message = error.message;\n    return { error: `Failed to save document: ${message}` };\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AACA;;;;;;;AAWO,eAAe,aAAa,EAAiB,EAAE,OAAe,EAAE,IAAa;IAClF,IAAI;QACF,IAAI,IAAI;YACN,MAAM,SAAS,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,aAAa;YACpC,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,QAAQ;gBAAE;gBAAS;gBAAM,WAAW,CAAA,GAAA,iKAAA,CAAA,kBAAe,AAAD;YAAI,GAAG;gBAAE,OAAO;YAAK;YACpF,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,CAAC,CAAC,EAAE,IAAI;YACvB,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,CAAC,MAAM,EAAE,IAAI;YAC5B,OAAO;gBAAE;YAAG;QACd,OAAO;YACL,MAAM,SAAS,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,cAAc;gBACvD;gBACA;gBACA,WAAW,CAAA,GAAA,iKAAA,CAAA,kBAAe,AAAD;gBACzB,WAAW,CAAA,GAAA,iKAAA,CAAA,kBAAe,AAAD;YAC3B;YACA,OAAO;gBAAE,IAAI,OAAO,EAAE;YAAC;QACzB;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,IAAI,UAAU;QACd,IAAI,iBAAiB,OAAO,UAAU,MAAM,OAAO;QACnD,OAAO;YAAE,OAAO,CAAC,yBAAyB,EAAE,SAAS;QAAC;IACxD;AACF;;;IAvBsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {saveDocument as '704eb6af9cd32784c37d679969af27c9aa2490d40a'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/editor-view.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/editor-view.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/editor-view.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/editor-view.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/editor-view.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/editor-view.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8Q,GAC3S,4CACA","debugId":null}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["import EditorView from '@/components/editor-view';\n\nexport default function NewDocumentPage() {\n  return <EditorView />;\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBAAO,8OAAC,oIAAA,CAAA,UAAU;;;;;AACpB","debugId":null}}]
}